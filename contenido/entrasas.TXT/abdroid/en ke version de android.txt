<div style="background-color: white; box-sizing: border-box; font-family: &quot;open sans&quot;, sans-serif; font-size: 14px; margin-bottom: 20px; text-align: justify;">
Siempre que empezamos a desarrollar una nueva aplicación Android, nos surge una pregunta <b>¿cual es el mínimo SDK que debo utilizar?</b>. Si escogemos uno muy bajo queriendo llegar a la mayor cantidad de usuarios del mercado, perderemos nuevas e importantes funciones, pero por supuesto, por el contrario si elegimos uno demasiado alto podemos quedar con pocos usuarios.<br />
<br />
&nbsp;Primero, debemos pensar y&nbsp;planificar&nbsp;muy bien nuestra aplicación mucho antes de empezar a escribir una línea de código. Puede que estemos programando en un SDK "bajo" pero si necesitemos utilizar una funcionalidad que está en una SDK "alto", en esos casos deberemos ver si realmente nuestro proyecto necesita de ello , y si es así tendremos que escoger el SDK más alto que contenga esa funcionalidad.<br />
<br />
&nbsp;Por ejemplo, si en un proyecto vamos a utilizar una tecnología relativamente reciente como "Multiple SIM Card Suppor" o Deprecated HTTP Classes, <b>la versión mínima del SDK debe ser 22 (5.1)</b> ya que esta tecnología se implementó en dicha versión del SDK.<br />
<div class="separator" style="clear: both; text-align: center;">
<a href="https://3.bp.blogspot.com/-23JE0gQ3RAQ/WAhzmQixLbI/AAAAAAAAAEo/cJNFBRUEuHAx2dCJw2cTwYbEGSDAE6e1wCLcB/s1600/l.PNG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="68" src="https://3.bp.blogspot.com/-23JE0gQ3RAQ/WAhzmQixLbI/AAAAAAAAAEo/cJNFBRUEuHAx2dCJw2cTwYbEGSDAE6e1wCLcB/s400/l.PNG" width="400" /></a></div>
<div class="separator" style="clear: both; text-align: center;">
<br /></div>
Pero por desventaja la cuota de mercado va a ser cercana a un triste 24.1%.

Por otro lado, si vamos a desarrollar aplicaciones que no requieran de funcionalidades avanzadas y tenemos que diseñar para el mayor número de dispositivos posibles debemos usar como&nbsp;la <b>versión mínima del SDK&nbsp;el 10 (2.3)</b>.<br />
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-IDI1LTBiW3Q/WAhzmclSR2I/AAAAAAAAAEk/AxJdQkeJVoIR6YETobwWKIvC-Gkcu21lgCEw/s1600/Captura.PNG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="https://1.bp.blogspot.com/-IDI1LTBiW3Q/WAhzmclSR2I/AAAAAAAAAEk/AxJdQkeJVoIR6YETobwWKIvC-Gkcu21lgCEw/s1600/Captura.PNG" /></a></div>
<div class="separator" style="clear: both; text-align: center;">
<br /></div>
Pero entonces ¿qué utilizo?. A día de hoy, para un proyecto que no requiere ninguna funcionalidad de SDKs avanzados, yo utilizaría la minSdkVersion 15 (4.0) que tendríamos cubierto más de un 97% del mercado .

Para aquellos que ya usamos Android Studio, en el mismo IDE cuando creamos un nuevo proyecto, nos muestra una lista con las nuevas funcionalidades que implementa cada una de las nuevas versiones, y es mucho más fácil saber si realmente necesitamos una versión superior o no, además de cuánto mercado estamos cogiendo en ese momento.<br />
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-S6nIKv4nix4/WAhzmRsgHBI/AAAAAAAAAEs/mHic26Xn_5szM4GIzps51-DmjlYF7UOawCEw/s1600/ice%2Bcream%2B4.0.PNG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="380" src="https://4.bp.blogspot.com/-S6nIKv4nix4/WAhzmRsgHBI/AAAAAAAAAEs/mHic26Xn_5szM4GIzps51-DmjlYF7UOawCEw/s640/ice%2Bcream%2B4.0.PNG" width="640" /></a></div>
<br /></div>
